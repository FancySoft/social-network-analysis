<?xml version="1.0" encoding="UTF-8"?>
<project name="accountsmatching" default="all">
  
  
  <property environment="env"/>
  <property name="jdk.home.1.7" value="${env.JAVA_HOME}"/>
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="off"/>
  <property name="compiler.generate.no.warnings" value="on"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="2048m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-doclet.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/htmlconverter.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/JObjC.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.json.classpath">
    <fileset dir="${basedir}/lib/JSON" includes="*.jar"/>
  </path>
  
  <path id="library.lib.classpath">
    <fileset dir="${basedir}/lib" includes="*.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module AccountsMatching -->
  
  <dirname property="module.accountsmatching.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.accountsmatching" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.accountsmatching" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.accountsmatching" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.accountsmatching" value="${compiler.args}"/>
  
  <property name="accountsmatching.output.dir" value="${module.accountsmatching.basedir}/out"/>
  
  <path id="accountsmatching.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="accountsmatching.module.production.classpath">
    <path refid="${module.jdk.classpath.accountsmatching}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.json.classpath"/>
  </path>
  
  <path id="accountsmatching.runtime.production.module.classpath">
    <pathelement location="${accountsmatching.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.json.classpath"/>
  </path>
  
  <path id="accountsmatching.module.classpath">
    <path refid="${module.jdk.classpath.accountsmatching}"/>
    <pathelement location="${accountsmatching.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.json.classpath"/>
  </path>
  
  <path id="accountsmatching.runtime.module.classpath">
    <pathelement location="${accountsmatching.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <path refid="library.json.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.accountsmatching">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.accountsmatching">
    <patternset refid="excluded.from.module.accountsmatching"/>
  </patternset>
  
  <path id="accountsmatching.module.sourcepath">
    <dirset dir="${module.accountsmatching.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.accountsmatching" depends="compile.module.accountsmatching.production,jars" description="Compile module AccountsMatching"/>
  
  <target name="compile.module.accountsmatching.production" description="Compile module AccountsMatching; production classes">
    <mkdir dir="${accountsmatching.output.dir}"/>
    <javac destdir="${accountsmatching.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.accountsmatching}/javac" encoding="UTF-8">
      <compilerarg line="${compiler.args.accountsmatching}"/>
      <bootclasspath refid="accountsmatching.module.bootclasspath"/>
      <classpath refid="accountsmatching.module.production.classpath"/>
      <src refid="accountsmatching.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.accountsmatching"/>
    </javac>
    
    <copy todir="${accountsmatching.output.dir}">
      <fileset dir="${module.accountsmatching.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="jars">
        <mkdir dir="jar"/>

        <!-- Crawler -->
        <jar destfile="jar/Crawler.jar" basedir="${accountsmatching.output.dir}"
          index="true">
            <zipgroupfileset dir="${basedir}/lib" includes="*.jar"/>
            <zipgroupfileset dir="${basedir}/lib/JSON" includes="*.jar"/>
            <manifest>
                <attribute name="Main-Class" value="com.fancy_software.accounts_matching.crawler.Main"/>
            </manifest>
        </jar>

        <!-- Randomizer -->
        <jar destfile="jar/Randomizer.jar" basedir="${accountsmatching.output.dir}"
          index="true">
            <zipgroupfileset dir="${basedir}/lib" includes="*.jar"/>
            <zipgroupfileset dir="${basedir}/lib/JSON" includes="*.jar"/>
            <manifest>
                <attribute name="Main-Class" value="com.fancy_software.accounts_matching.data_randomizer.Main"/>
            </manifest>
        </jar>

        <!-- Matcher -->
        <jar destfile="jar/Matcher.jar" basedir="${accountsmatching.output.dir}"
          index="true">
            <zipgroupfileset dir="${basedir}/lib" includes="*.jar"/>
            <zipgroupfileset dir="${basedir}/lib/JSON" includes="*.jar"/>
            <manifest>
                <attribute name="Main-Class" value="com.fancy_software.accounts_matching.matcher.TestMain"/>
            </manifest>
        </jar>
    </target>
  
  <target name="clean.module.accountsmatching" description="cleanup module">
    <delete dir="${accountsmatching.output.dir}"/>
    <delete dir="jar"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.accountsmatching" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.accountsmatching" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>